{
  "violations": [
    {
      "type": "ARCHITECTURE_VIOLATION",
      "severity": "WARNING",
      "file": "AdminPanelBackend.gs",
      "message": "グローバル関数過多: 25個（推奨: 10個以下）",
      "details": "connectDataSource, publishApplication, saveDraftConfiguration, getFormInfo, getSpreadsheetList...",
      "rule": "CLAUDE.md モジュール化原則"
    },
    {
      "type": "ARCHITECTURE_VIOLATION",
      "severity": "WARNING",
      "file": "ColumnAnalysisSystem.gs",
      "message": "グローバル関数過多: 20個（推奨: 10個以下）",
      "details": "analyzeColumnType, analyzeHeaderName, analyzeColumnContent, calculateFinalConfidence, calculateAdvancedFeatures...",
      "rule": "CLAUDE.md モジュール化原則"
    },
    {
      "type": "ARCHITECTURE_VIOLATION",
      "severity": "WARNING",
      "file": "Core.gs",
      "message": "グローバル関数過多: 75個（推奨: 10個以下）",
      "details": "getBulkData, getAutoStopTime, determineSetupStep, validateHeaderIntegrity, getOpinionHeaderSafely...",
      "rule": "CLAUDE.md モジュール化原則"
    },
    {
      "type": "ARCHITECTURE_VIOLATION",
      "severity": "WARNING",
      "file": "main.gs",
      "message": "グローバル関数過多: 41個（推奨: 10個以下）",
      "details": "doGet, isSystemSetup, getGoogleClientId, checkSystem, getSystemDomainInfo...",
      "rule": "CLAUDE.md モジュール化原則"
    },
    {
      "type": "ARCHITECTURE_VIOLATION",
      "severity": "WARNING",
      "file": "security.gs",
      "message": "グローバル関数過多: 11個（推奨: 10個以下）",
      "details": "getServiceAccountTokenCached, generateNewServiceAccountToken, getSecureServiceAccountCreds, verifyAdminAccess, getSecureDatabaseId...",
      "rule": "CLAUDE.md モジュール化原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "AdminPanelBackend.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "Base.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "ConfigManager.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "Core.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "PageBackend.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "auth.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    },
    {
      "type": "DATA_FLOW_VIOLATION",
      "severity": "WARNING",
      "file": "main.gs",
      "flow": "Direct userInfo field access",
      "count": 1,
      "message": "不適切なデータフロー: Direct userInfo field access (1箇所)",
      "rule": "CLAUDE.md データフロー原則"
    }
  ],
  "compliance": [
    {
      "type": "CONFIG_JSON_USAGE",
      "file": "AdminPanelBackend.gs",
      "count": 5,
      "message": "configJSON中心設計遵守: 5箇所でJSON.parse使用"
    },
    {
      "type": "CONFIG_JSON_USAGE",
      "file": "Base.gs",
      "count": 2,
      "message": "configJSON中心設計遵守: 2箇所でJSON.parse使用"
    },
    {
      "type": "CONFIG_JSON_USAGE",
      "file": "Core.gs",
      "count": 29,
      "message": "configJSON中心設計遵守: 29箇所でJSON.parse使用"
    },
    {
      "type": "CONFIG_JSON_USAGE",
      "file": "PageBackend.gs",
      "count": 4,
      "message": "configJSON中心設計遵守: 4箇所でJSON.parse使用"
    },
    {
      "type": "CONFIG_JSON_USAGE",
      "file": "main.gs",
      "count": 9,
      "message": "configJSON中心設計遵守: 9箇所でJSON.parse使用"
    },
    {
      "type": "NAMESPACE_USAGE",
      "namespace": "App",
      "count": 31,
      "message": "App名前空間を31回使用"
    },
    {
      "type": "NAMESPACE_USAGE",
      "namespace": "DB",
      "count": 80,
      "message": "DB名前空間を80回使用"
    },
    {
      "type": "NAMESPACE_USAGE",
      "namespace": "ConfigManager",
      "count": 72,
      "message": "ConfigManager名前空間を72回使用"
    },
    {
      "type": "NAMESPACE_USAGE",
      "namespace": "SecurityValidator",
      "count": 14,
      "message": "SecurityValidator名前空間を14回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "AdminPanelBackend.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 10,
      "message": "効率的API使用: .getValues\\(\\) を10回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "Base.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 3,
      "message": "効率的API使用: .getValues\\(\\) を3回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "Base.gs",
      "pattern": "PropertiesService\\.",
      "count": 3,
      "message": "効率的API使用: PropertiesService. を3回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "Core.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 9,
      "message": "効率的API使用: .getValues\\(\\) を9回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "Core.gs",
      "pattern": "CacheService\\.",
      "count": 1,
      "message": "効率的API使用: CacheService. を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "Core.gs",
      "pattern": "PropertiesService\\.",
      "count": 2,
      "message": "効率的API使用: PropertiesService. を2回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "PageBackend.gs",
      "pattern": "CacheService\\.",
      "count": 2,
      "message": "効率的API使用: CacheService. を2回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "cache.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 1,
      "message": "効率的API使用: .getValues\\(\\) を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "cache.gs",
      "pattern": "CacheService\\.",
      "count": 1,
      "message": "効率的API使用: CacheService. を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "database.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 1,
      "message": "効率的API使用: .getValues\\(\\) を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "database.gs",
      "pattern": "CacheService\\.",
      "count": 5,
      "message": "効率的API使用: CacheService. を5回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "database.gs",
      "pattern": "PropertiesService\\.",
      "count": 2,
      "message": "効率的API使用: PropertiesService. を2回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "main.gs",
      "pattern": "\\.getValues\\(\\)",
      "count": 1,
      "message": "効率的API使用: .getValues\\(\\) を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "main.gs",
      "pattern": "PropertiesService\\.",
      "count": 12,
      "message": "効率的API使用: PropertiesService. を12回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "security.gs",
      "pattern": "CacheService\\.",
      "count": 1,
      "message": "効率的API使用: CacheService. を1回使用"
    },
    {
      "type": "PERFORMANCE_OPTIMIZATION",
      "file": "security.gs",
      "pattern": "PropertiesService\\.",
      "count": 2,
      "message": "効率的API使用: PropertiesService. を2回使用"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "AdminPanelBackend.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 111,
      "message": "セキュリティベストプラクティス使用: 111箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "App.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "Base.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 2,
      "message": "セキュリティベストプラクティス使用: 2箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "Base.gs",
      "pattern": "SecurityValidator\\.",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "Base.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 45,
      "message": "セキュリティベストプラクティス使用: 45箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "ColumnAnalysisSystem.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 90,
      "message": "セキュリティベストプラクティス使用: 90箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "ConfigManager.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "ConfigManager.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 47,
      "message": "セキュリティベストプラクティス使用: 47箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "Core.gs",
      "pattern": "SecurityValidator\\.",
      "count": 3,
      "message": "セキュリティベストプラクティス使用: 3箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "Core.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 372,
      "message": "セキュリティベストプラクティス使用: 372箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "PageBackend.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "PageBackend.gs",
      "pattern": "SecurityValidator\\.",
      "count": 6,
      "message": "セキュリティベストプラクティス使用: 6箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "PageBackend.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 36,
      "message": "セキュリティベストプラクティス使用: 36箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "auth.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 18,
      "message": "セキュリティベストプラクティス使用: 18箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "cache.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 52,
      "message": "セキュリティベストプラクティス使用: 52箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "constants.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 31,
      "message": "セキュリティベストプラクティス使用: 31箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "constants.gs",
      "pattern": "SecurityValidator\\.",
      "count": 4,
      "message": "セキュリティベストプラクティス使用: 4箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "constants.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 15,
      "message": "セキュリティベストプラクティス使用: 15箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "database.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "database.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 126,
      "message": "セキュリティベストプラクティス使用: 126箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "main.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "main.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 133,
      "message": "セキュリティベストプラクティス使用: 133箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "security.gs",
      "pattern": "Object\\.freeze\\(",
      "count": 1,
      "message": "セキュリティベストプラクティス使用: 1箇所"
    },
    {
      "type": "SECURITY_BEST_PRACTICE",
      "file": "security.gs",
      "pattern": "const\\s+\\w+\\s*=",
      "count": 41,
      "message": "セキュリティベストプラクティス使用: 41箇所"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "connectDataSource",
      "callCount": 1,
      "message": "関数使用: connectDataSource (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "publishApplication",
      "callCount": 1,
      "message": "関数使用: publishApplication (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "saveDraftConfiguration",
      "callCount": 1,
      "message": "関数使用: saveDraftConfiguration (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getFormInfo",
      "callCount": 2,
      "message": "関数使用: getFormInfo (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSpreadsheetList",
      "callCount": 1,
      "message": "関数使用: getSpreadsheetList (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeAppPublish",
      "callCount": 2,
      "message": "関数使用: executeAppPublish (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeConfigCleanup",
      "callCount": 1,
      "message": "関数使用: executeConfigCleanup (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateColumnMapping",
      "callCount": 5,
      "message": "関数使用: generateColumnMapping (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateLegacyColumnMapping",
      "callCount": 3,
      "message": "関数使用: generateLegacyColumnMapping (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "detectColumnMapping",
      "callCount": 3,
      "message": "関数使用: detectColumnMapping (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "validateAdminPanelMapping",
      "callCount": 2,
      "message": "関数使用: validateAdminPanelMapping (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addMissingColumns",
      "callCount": 2,
      "message": "関数使用: addMissingColumns (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "checkFormConnection",
      "callCount": 2,
      "message": "関数使用: checkFormConnection (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getConfig",
      "callCount": 3,
      "message": "関数使用: getConfig (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getCurrentBoardInfoAndUrls",
      "callCount": 1,
      "message": "関数使用: getCurrentBoardInfoAndUrls (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "checkIsSystemAdmin",
      "callCount": 1,
      "message": "関数使用: checkIsSystemAdmin (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "migrateUserDataToConfigJson",
      "callCount": 1,
      "message": "関数使用: migrateUserDataToConfigJson (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "analyzeColumns",
      "callCount": 1,
      "message": "関数使用: analyzeColumns (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getHeaderIndices",
      "callCount": 1,
      "message": "関数使用: getHeaderIndices (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetList",
      "callCount": 3,
      "message": "関数使用: getSheetList (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getActualHeaderName",
      "callCount": 5,
      "message": "関数使用: getActualHeaderName (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "diagnoseColumnMappingIssue",
      "callCount": 1,
      "message": "関数使用: diagnoseColumnMappingIssue (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "repairColumnMapping",
      "callCount": 1,
      "message": "関数使用: repairColumnMapping (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateRecommendations",
      "callCount": 2,
      "message": "関数使用: generateRecommendations (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "fixFormInfoForUser",
      "callCount": 1,
      "message": "関数使用: fixFormInfoForUser (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getColumnIndex",
      "callCount": 5,
      "message": "関数使用: getColumnIndex (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getColumnHeaderByIndex",
      "callCount": 9,
      "message": "関数使用: getColumnHeaderByIndex (9回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getAllColumnIndices",
      "callCount": 7,
      "message": "関数使用: getAllColumnIndices (7回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "testUnifiedSystem",
      "callCount": 2,
      "message": "関数使用: testUnifiedSystem (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "testSystemStatus",
      "callCount": 2,
      "message": "関数使用: testSystemStatus (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "analyzeColumnType",
      "callCount": 1,
      "message": "関数使用: analyzeColumnType (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "analyzeHeaderName",
      "callCount": 2,
      "message": "関数使用: analyzeHeaderName (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "analyzeColumnContent",
      "callCount": 2,
      "message": "関数使用: analyzeColumnContent (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateFinalConfidence",
      "callCount": 1,
      "message": "関数使用: calculateFinalConfidence (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateAdvancedFeatures",
      "callCount": 2,
      "message": "関数使用: calculateAdvancedFeatures (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getEmptyFeatureVector",
      "callCount": 3,
      "message": "関数使用: getEmptyFeatureVector (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateSkewness",
      "callCount": 2,
      "message": "関数使用: calculateSkewness (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateKurtosis",
      "callCount": 2,
      "message": "関数使用: calculateKurtosis (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateShannonEntropy",
      "callCount": 2,
      "message": "関数使用: calculateShannonEntropy (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateConditionalEntropy",
      "callCount": 2,
      "message": "関数使用: calculateConditionalEntropy (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateMutualInformation",
      "callCount": 2,
      "message": "関数使用: calculateMutualInformation (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculatePatternDensity",
      "callCount": 3,
      "message": "関数使用: calculatePatternDensity (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateNamePatternScore",
      "callCount": 2,
      "message": "関数使用: calculateNamePatternScore (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateClassPatternScore",
      "callCount": 2,
      "message": "関数使用: calculateClassPatternScore (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "ensembleClassification",
      "callCount": 3,
      "message": "関数使用: ensembleClassification (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "classifyByAdvancedFeatures",
      "callCount": 2,
      "message": "関数使用: classifyByAdvancedFeatures (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateDynamicWeights",
      "callCount": 2,
      "message": "関数使用: calculateDynamicWeights (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateBayesianConfidence",
      "callCount": 2,
      "message": "関数使用: calculateBayesianConfidence (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "resolveColumnConflicts",
      "callCount": 2,
      "message": "関数使用: resolveColumnConflicts (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "hungarianAlgorithmSimplified",
      "callCount": 2,
      "message": "関数使用: hungarianAlgorithmSimplified (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getBulkData",
      "callCount": 1,
      "message": "関数使用: getBulkData (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getAutoStopTime",
      "callCount": 1,
      "message": "関数使用: getAutoStopTime (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "determineSetupStep",
      "callCount": 3,
      "message": "関数使用: determineSetupStep (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "validateHeaderIntegrity",
      "callCount": 1,
      "message": "関数使用: validateHeaderIntegrity (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getOpinionHeaderSafely",
      "callCount": 1,
      "message": "関数使用: getOpinionHeaderSafely (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "registerNewUser",
      "callCount": 2,
      "message": "関数使用: registerNewUser (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addReaction",
      "callCount": 2,
      "message": "関数使用: addReaction (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeAddReaction",
      "callCount": 2,
      "message": "関数使用: executeAddReaction (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getCurrentSheetName",
      "callCount": 1,
      "message": "関数使用: getCurrentSheetName (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeGetPublishedSheetData",
      "callCount": 2,
      "message": "関数使用: executeGetPublishedSheetData (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getIncrementalData",
      "callCount": 1,
      "message": "関数使用: getIncrementalData (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "formatSheetDataForFrontend",
      "callCount": 3,
      "message": "関数使用: formatSheetDataForFrontend (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "switchToSheet",
      "callCount": 1,
      "message": "関数使用: switchToSheet (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getResponsesData",
      "callCount": 3,
      "message": "関数使用: getResponsesData (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getCurrentUserStatus",
      "callCount": 1,
      "message": "関数使用: getCurrentUserStatus (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getActiveFormInfo",
      "callCount": 2,
      "message": "関数使用: getActiveFormInfo (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "countSheetRows",
      "callCount": 2,
      "message": "関数使用: countSheetRows (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "updateFormSettings",
      "callCount": 1,
      "message": "関数使用: updateFormSettings (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "saveSystemConfig",
      "callCount": 1,
      "message": "関数使用: saveSystemConfig (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "toggleHighlight",
      "callCount": 1,
      "message": "関数使用: toggleHighlight (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeToggleHighlight",
      "callCount": 2,
      "message": "関数使用: executeToggleHighlight (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createUserFolder",
      "callCount": 2,
      "message": "関数使用: createUserFolder (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "processHighlightToggle",
      "callCount": 2,
      "message": "関数使用: processHighlightToggle (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetColumns",
      "callCount": 1,
      "message": "関数使用: getSheetColumns (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "extractFormIdFromUrl",
      "callCount": 3,
      "message": "関数使用: extractFormIdFromUrl (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "processReaction",
      "callCount": 2,
      "message": "関数使用: processReaction (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createFormFactory",
      "callCount": 2,
      "message": "関数使用: createFormFactory (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addUnifiedQuestions",
      "callCount": 2,
      "message": "関数使用: addUnifiedQuestions (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getQuestionConfig",
      "callCount": 3,
      "message": "関数使用: getQuestionConfig (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "doGetQuestionConfig",
      "callCount": 1,
      "message": "関数使用: doGetQuestionConfig (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "saveClassChoices",
      "callCount": 1,
      "message": "関数使用: saveClassChoices (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSavedClassChoices",
      "callCount": 1,
      "message": "関数使用: getSavedClassChoices (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createUnifiedForm",
      "callCount": 3,
      "message": "関数使用: createUnifiedForm (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createLinkedSpreadsheet",
      "callCount": 2,
      "message": "関数使用: createLinkedSpreadsheet (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "shareAllSpreadsheetsWithServiceAccount",
      "callCount": 1,
      "message": "関数使用: shareAllSpreadsheetsWithServiceAccount (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "repairUserSpreadsheetAccess",
      "callCount": 2,
      "message": "関数使用: repairUserSpreadsheetAccess (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addReactionColumnsToSpreadsheet",
      "callCount": 2,
      "message": "関数使用: addReactionColumnsToSpreadsheet (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetData",
      "callCount": 2,
      "message": "関数使用: getSheetData (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetConfig",
      "callCount": 1,
      "message": "関数使用: getSheetConfig (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "buildSheetConfigDynamically",
      "callCount": 4,
      "message": "関数使用: buildSheetConfigDynamically (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetConfigSafe",
      "callCount": 1,
      "message": "関数使用: getSheetConfigSafe (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetConfigCached",
      "callCount": 1,
      "message": "関数使用: getSheetConfigCached (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "executeGetSheetData",
      "callCount": 3,
      "message": "関数使用: executeGetSheetData (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetsList",
      "callCount": 2,
      "message": "関数使用: getSheetsList (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "buildRosterMap",
      "callCount": 3,
      "message": "関数使用: buildRosterMap (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "processRowData",
      "callCount": 3,
      "message": "関数使用: processRowData (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateRowScore",
      "callCount": 2,
      "message": "関数使用: calculateRowScore (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "applySortMode",
      "callCount": 2,
      "message": "関数使用: applySortMode (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "shuffleArray",
      "callCount": 2,
      "message": "関数使用: shuffleArray (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getHeaderIndex",
      "callCount": 1,
      "message": "関数使用: getHeaderIndex (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getColumnHeaderName",
      "callCount": 1,
      "message": "関数使用: getColumnHeaderName (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "mapColumnIndices",
      "callCount": 1,
      "message": "関数使用: mapColumnIndices (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "updateIsActiveStatus",
      "callCount": 1,
      "message": "関数使用: updateIsActiveStatus (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "hasSetupPageAccess",
      "callCount": 1,
      "message": "関数使用: hasSetupPageAccess (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getDriveService",
      "callCount": 1,
      "message": "関数使用: getDriveService (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "shouldEnableDebugMode",
      "callCount": 1,
      "message": "関数使用: shouldEnableDebugMode (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "isSystemAdmin",
      "callCount": 4,
      "message": "関数使用: isSystemAdmin (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "deleteUserAccountByAdminForUI",
      "callCount": 1,
      "message": "関数使用: deleteUserAccountByAdminForUI (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getDeletionLogsForUI",
      "callCount": 1,
      "message": "関数使用: getDeletionLogsForUI (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getAllUsersForAdminForUI",
      "callCount": 1,
      "message": "関数使用: getAllUsersForAdminForUI (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createForm",
      "callCount": 1,
      "message": "関数使用: createForm (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "deleteCurrentUserAccount",
      "callCount": 1,
      "message": "関数使用: deleteCurrentUserAccount (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "activateSheetSimple",
      "callCount": 1,
      "message": "関数使用: activateSheetSimple (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getLoginStatus",
      "callCount": 2,
      "message": "関数使用: getLoginStatus (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getInitialData",
      "callCount": 1,
      "message": "関数使用: getInitialData (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "fixDataConsistencyManual",
      "callCount": 1,
      "message": "関数使用: fixDataConsistencyManual (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getApplicationStatusForUI",
      "callCount": 1,
      "message": "関数使用: getApplicationStatusForUI (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "setApplicationStatusForUI",
      "callCount": 1,
      "message": "関数使用: setApplicationStatusForUI (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "identifyHeadersAdvanced",
      "callCount": 1,
      "message": "関数使用: identifyHeadersAdvanced (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "enhanceWithWebKnowledge",
      "callCount": 2,
      "message": "関数使用: enhanceWithWebKnowledge (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "analyzeContextualMeaning",
      "callCount": 2,
      "message": "関数使用: analyzeContextualMeaning (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "calculateAdvancedConfidence",
      "callCount": 2,
      "message": "関数使用: calculateAdvancedConfidence (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "identifyHeaders",
      "callCount": 4,
      "message": "関数使用: identifyHeaders (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "performAutoRepair",
      "callCount": 1,
      "message": "関数使用: performAutoRepair (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "clearExecutionUserInfoCache",
      "callCount": 5,
      "message": "関数使用: clearExecutionUserInfoCache (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "checkAdmin",
      "callCount": 1,
      "message": "関数使用: checkAdmin (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getAvailableSheets",
      "callCount": 1,
      "message": "関数使用: getAvailableSheets (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "clearActiveSheet",
      "callCount": 1,
      "message": "関数使用: clearActiveSheet (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addReactions",
      "callCount": 1,
      "message": "関数使用: addReactions (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "refreshBoardData",
      "callCount": 1,
      "message": "関数使用: refreshBoardData (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getDataCount",
      "callCount": 1,
      "message": "関数使用: getDataCount (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createCompleteUser",
      "callCount": 4,
      "message": "関数使用: createCompleteUser (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createRedirect",
      "callCount": 3,
      "message": "関数使用: createRedirect (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "handleUserRegistration",
      "callCount": 3,
      "message": "関数使用: handleUserRegistration (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "updateUserLastAccess",
      "callCount": 5,
      "message": "関数使用: updateUserLastAccess (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSetupStatusFromConfig",
      "callCount": 2,
      "message": "関数使用: getSetupStatusFromConfig (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "processAdminAccess",
      "callCount": 1,
      "message": "関数使用: processAdminAccess (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetsServiceCached",
      "callCount": 11,
      "message": "関数使用: getSheetsServiceCached (11回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSpreadsheetHeaders",
      "callCount": 1,
      "message": "関数使用: getSpreadsheetHeaders (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "validateSpreadsheetHeaders",
      "callCount": 3,
      "message": "関数使用: validateSpreadsheetHeaders (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "invalidateUserCache",
      "callCount": 8,
      "message": "関数使用: invalidateUserCache (8回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "synchronizeCacheAfterCriticalUpdate",
      "callCount": 2,
      "message": "関数使用: synchronizeCacheAfterCriticalUpdate (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetsServiceWithRetry",
      "callCount": 11,
      "message": "関数使用: getSheetsServiceWithRetry (11回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "initializeDatabaseSheet",
      "callCount": 2,
      "message": "関数使用: initializeDatabaseSheet (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "cleanupEmptyUsers",
      "callCount": 1,
      "message": "関数使用: cleanupEmptyUsers (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "debugShowAllUsers",
      "callCount": 1,
      "message": "関数使用: debugShowAllUsers (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "updateUserFields",
      "callCount": 2,
      "message": "関数使用: updateUserFields (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSpreadsheetsData",
      "callCount": 4,
      "message": "関数使用: getSpreadsheetsData (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "doGet",
      "callCount": 1,
      "message": "関数使用: doGet (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "isSystemSetup",
      "callCount": 8,
      "message": "関数使用: isSystemSetup (8回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getGoogleClientId",
      "callCount": 1,
      "message": "関数使用: getGoogleClientId (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "checkSystem",
      "callCount": 1,
      "message": "関数使用: checkSystem (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSystemDomainInfo",
      "callCount": 1,
      "message": "関数使用: getSystemDomainInfo (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "showAdminPanel",
      "callCount": 1,
      "message": "関数使用: showAdminPanel (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "showAnswerBoard",
      "callCount": 1,
      "message": "関数使用: showAnswerBoard (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSuggestedAction",
      "callCount": 2,
      "message": "関数使用: getSuggestedAction (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateUserId",
      "callCount": 1,
      "message": "関数使用: generateUserId (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getWebAppUrl",
      "callCount": 9,
      "message": "関数使用: getWebAppUrl (9回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getEmailDomain",
      "callCount": 3,
      "message": "関数使用: getEmailDomain (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "buildUserAdminUrl",
      "callCount": 4,
      "message": "関数使用: buildUserAdminUrl (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "showErrorPage",
      "callCount": 7,
      "message": "関数使用: showErrorPage (7回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "renderSetupPage",
      "callCount": 2,
      "message": "関数使用: renderSetupPage (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateUserUrls",
      "callCount": 13,
      "message": "関数使用: generateUserUrls (13回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "parseRequestParams",
      "callCount": 2,
      "message": "関数使用: parseRequestParams (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "include",
      "callCount": 1,
      "message": "関数使用: include (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "renderAdminPanel",
      "callCount": 3,
      "message": "関数使用: renderAdminPanel (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "processLoginAction",
      "callCount": 1,
      "message": "関数使用: processLoginAction (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "renderLoginPage",
      "callCount": 5,
      "message": "関数使用: renderLoginPage (5回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "renderAnswerBoard",
      "callCount": 3,
      "message": "関数使用: renderAnswerBoard (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "checkCurrentPublicationStatus",
      "callCount": 1,
      "message": "関数使用: checkCurrentPublicationStatus (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getTestMockResponse",
      "callCount": 1,
      "message": "関数使用: getTestMockResponse (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "saveApplicationConfig",
      "callCount": 1,
      "message": "関数使用: saveApplicationConfig (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "setupApplication",
      "callCount": 1,
      "message": "関数使用: setupApplication (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getUser",
      "callCount": 1,
      "message": "関数使用: getUser (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "forceUrlSystemReset",
      "callCount": 1,
      "message": "関数使用: forceUrlSystemReset (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "reportClientError",
      "callCount": 1,
      "message": "関数使用: reportClientError (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "createResponse",
      "callCount": 32,
      "message": "関数使用: createResponse (32回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addSpreadsheetUrl",
      "callCount": 1,
      "message": "関数使用: addSpreadsheetUrl (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "resetAuth",
      "callCount": 1,
      "message": "関数使用: resetAuth (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "testForceLogoutRedirect",
      "callCount": 1,
      "message": "関数使用: testForceLogoutRedirect (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "verifyUserAuthentication",
      "callCount": 1,
      "message": "関数使用: verifyUserAuthentication (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "forceLogoutAndRedirectToLogin",
      "callCount": 1,
      "message": "関数使用: forceLogoutAndRedirectToLogin (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getData",
      "callCount": 3,
      "message": "関数使用: getData (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "handleSystemError",
      "callCount": 1,
      "message": "関数使用: handleSystemError (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getActiveUserInfo",
      "callCount": 11,
      "message": "関数使用: getActiveUserInfo (11回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "validateUserDataState",
      "callCount": 1,
      "message": "関数使用: validateUserDataState (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "diagnoseSystem",
      "callCount": 1,
      "message": "関数使用: diagnoseSystem (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "emergencyClearCache",
      "callCount": 1,
      "message": "関数使用: emergencyClearCache (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "repairCurrentUser",
      "callCount": 1,
      "message": "関数使用: repairCurrentUser (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getServiceAccountTokenCached",
      "callCount": 8,
      "message": "関数使用: getServiceAccountTokenCached (8回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "generateNewServiceAccountToken",
      "callCount": 2,
      "message": "関数使用: generateNewServiceAccountToken (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSecureServiceAccountCreds",
      "callCount": 4,
      "message": "関数使用: getSecureServiceAccountCreds (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "verifyAdminAccess",
      "callCount": 4,
      "message": "関数使用: verifyAdminAccess (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSecureDatabaseId",
      "callCount": 10,
      "message": "関数使用: getSecureDatabaseId (10回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "shareSpreadsheetWithServiceAccount",
      "callCount": 3,
      "message": "関数使用: shareSpreadsheetWithServiceAccount (3回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getSheetsService",
      "callCount": 1,
      "message": "関数使用: getSheetsService (1回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "updateSheetsData",
      "callCount": 2,
      "message": "関数使用: updateSheetsData (2回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "batchGetSheetsData",
      "callCount": 8,
      "message": "関数使用: batchGetSheetsData (8回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "getServiceAccountEmail",
      "callCount": 4,
      "message": "関数使用: getServiceAccountEmail (4回呼び出し)"
    },
    {
      "type": "FUNCTION_USAGE",
      "function": "addServiceAccountToSpreadsheet",
      "callCount": 2,
      "message": "関数使用: addServiceAccountToSpreadsheet (2回呼び出し)"
    }
  ],
  "metrics": {
    "totalFiles": 32,
    "totalLines": 36606,
    "violationCount": 12,
    "complianceScore": 95,
    "architecturalIssues": 0,
    "performanceIssues": 0,
    "securityIssues": 0
  }
}