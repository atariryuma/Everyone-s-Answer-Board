{
  "metadata": {
    "generatedAt": "2025-08-30T01:30:54.902Z",
    "srcDirectory": "/Users/ryuma/Everyone-s-Answer-Board/src",
    "analysisEngine": "GasDependencyAnalyzer v1.0",
    "totalAnalysisTime": "N/A"
  },
  "summary": {
    "totalFiles": 43,
    "usedFiles": 14,
    "unusedFiles": 29,
    "totalFunctions": 773,
    "usedFunctions": 1228,
    "unusedFunctions": 30
  },
  "unusedFiles": [
    {
      "path": "auth.gs",
      "size": 4280,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/auth.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "backendProgressSync.js.html",
      "size": 8152,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/backendProgressSync.js.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "ClientOptimizer.html",
      "size": 9695,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/ClientOptimizer.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "Code.gs",
      "size": 62356,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/Code.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "config.gs",
      "size": 6414,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/config.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "constants.gs",
      "size": 39635,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/constants.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "constants.js.html",
      "size": 6347,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/constants.js.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "Core.gs",
      "size": 166084,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/Core.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "database.gs",
      "size": 103568,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/database.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "debugConfig.gs",
      "size": 4803,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/debugConfig.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "ErrorBoundary.html",
      "size": 22189,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/ErrorBoundary.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "errorHandler.gs",
      "size": 8170,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/errorHandler.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "errorMessages.js.html",
      "size": 11455,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/errorMessages.js.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "lockManager.gs",
      "size": 2935,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/lockManager.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "monitoring.gs",
      "size": 12039,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/monitoring.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "page.css.html",
      "size": 15658,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/page.css.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "Page.html",
      "size": 118610,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/Page.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "Registration.html",
      "size": 41839,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/Registration.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "resilientExecutor.gs",
      "size": 11570,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/resilientExecutor.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "secretManager.gs",
      "size": 22690,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/secretManager.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "session-utils.gs",
      "size": 13106,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/session-utils.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "setup.gs",
      "size": 3529,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/setup.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "SharedModals.html",
      "size": 76666,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/SharedModals.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "ulog.gs",
      "size": 6864,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/ulog.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "UnifiedCache.js.html",
      "size": 942,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/UnifiedCache.js.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "unifiedCacheManager.gs",
      "size": 78966,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/unifiedCacheManager.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "unifiedUtilities.gs",
      "size": 9993,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/unifiedUtilities.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "Unpublished.html",
      "size": 11340,
      "type": "html-frontend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/Unpublished.html",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    },
    {
      "path": "url.gs",
      "size": 15578,
      "type": "gas-backend",
      "fullPath": "/Users/ryuma/Everyone-s-Answer-Board/src/url.gs",
      "recommendedAction": "テスト後削除：機能テスト後に削除を検討",
      "riskLevel": "medium",
      "dependencies": {
        "dependencies": [],
        "dependents": []
      }
    }
  ],
  "unusedFunctions": [
    {
      "name": "setupStep",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "cleanupExpired",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "dms",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "resolveValue",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "invalidateCacheForSpreadsheet",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "updateUserDatabaseField",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "clearUserCache",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "deleteAll",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "initializeSystem",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "initializeComponent",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "performInitialHealthCheck",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "performBasicHealthCheck",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "shutdown",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "fallbackBatchGet",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "batchUpdate",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "batchCache",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "setupStatus",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "sendSecurityAlert",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "checkLoginStatus",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "updateLoginStatus",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "sheetDataCache",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "checkServiceAccountConfiguration",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "Low"
    },
    {
      "name": "validateUserScopedKey",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "performServiceAccountHealthCheck",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "argumentMapper",
      "definedIn": [
        "constants.gs"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "getClientId",
      "definedIn": [
        "login.js.html"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "handleLoginError",
      "definedIn": [
        "login.js.html"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "measurePerformance",
      "definedIn": [
        "Page.html",
        "page.js.html"
      ],
      "recommendedAction": "テスト後削除：動作確認後に削除を検討",
      "riskLevel": "medium",
      "potentialImpact": "High"
    },
    {
      "name": "handleKeydown",
      "definedIn": [
        "page.js.html"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    },
    {
      "name": "testDebounce",
      "definedIn": [
        "SharedUtilities.html"
      ],
      "recommendedAction": "安全に削除可能：バックアップ後に削除",
      "riskLevel": "low",
      "potentialImpact": "Low"
    }
  ],
  "dependencyGraph": {
    "AccessRestricted.html": {
      "type": "html-frontend",
      "size": 10110,
      "functions": [],
      "dependencies": [
        "SharedSecurityHeaders.html",
        "SharedTailwindConfig.html",
        "UnifiedStyles.html",
        "SharedUtilities.html"
      ],
      "dependents": []
    },
    "AdminPanel.html": {
      "type": "html-frontend",
      "size": 31838,
      "functions": [
        "updateSystemStatus",
        "updateLastUpdateTime",
        "initializePanel",
        "loadSpreadsheetList",
        "loadUserInfo",
        "setLoading",
        "showError",
        "showSuccess",
        "exportConfig",
        "checkSystemAdminAccess",
        "goToAppSetup",
        "loadSheetList",
        "connectToSource",
        "updateProgress",
        "updateColumnMapping",
        "verifyColumnMapping",
        "saveDraft",
        "publishApp",
        "gatherConfiguration",
        "updateConfigDisplay",
        "updatePublishStatus"
      ],
      "dependencies": [
        "SharedSecurityHeaders.html",
        "SharedTailwindConfig.html",
        "UnifiedStyles.html",
        "SharedUtilities.html"
      ],
      "dependents": [],
      "usesGasApi": true
    },
    "AdminPanelBackend.gs": {
      "type": "gas-backend",
      "size": 16185,
      "functions": [
        "getSpreadsheetList",
        "getSheetList",
        "connectToDataSource",
        "detectColumnMapping",
        "getCurrentConfig",
        "getSetupStatusFromStep",
        "saveDraftConfiguration",
        "publishApplication",
        "updateUserSpreadsheetConfig",
        "getUserConfigJson",
        "executeAppPublish",
        "getOrCreateWebAppUrl",
        "doGet",
        "checkIsSystemAdmin"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "AppSetupPage.html": {
      "type": "html-frontend",
      "size": 51677,
      "functions": [
        "showMessage",
        "loadCurrentStatus",
        "updateStatusDisplay",
        "enableControls",
        "updateIsActiveStatus",
        "goBackToAdminPanel",
        "toggleUserManagement",
        "loadUserList",
        "displayUserList",
        "showDeleteConfirmation",
        "cancelDeletion",
        "confirmDeletion",
        "viewDeletionLogs",
        "displayDeletionLogs",
        "closeDeletionLogs",
        "runSystemDiagnosis",
        "runAutoRepair",
        "runSystemMonitoring",
        "runIntegrityCheck",
        "executeSystemFunction",
        "formatDiagnosticResult",
        "createDiagnosticSummary",
        "saveDiagnosticToHistory",
        "viewDiagnosticHistory",
        "displayDiagnosticHistory"
      ],
      "dependencies": [
        "SharedSecurityHeaders.html",
        "SharedTailwindConfig.html",
        "UnifiedStyles.html",
        "SharedUtilities.html"
      ],
      "dependents": []
    },
    "auth.gs": {
      "type": "gas-backend",
      "size": 4280,
      "functions": [
        "processLoginFlow"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "backendProgressSync.js.html": {
      "type": "html-frontend",
      "size": 8152,
      "functions": [
        "constructor",
        "startSync",
        "beginPolling",
        "parseProgressResponse",
        "hasProgressChanged",
        "shouldStopOnError",
        "stopSync",
        "stopPolling",
        "stopAllSync",
        "disable",
        "enable",
        "getActiveFlowCount",
        "getDebugInfo"
      ],
      "dependencies": [],
      "dependents": []
    },
    "ClientOptimizer.html": {
      "type": "html-frontend",
      "size": 9695,
      "functions": [
        "constructor",
        "executeCall",
        "processQueue",
        "enhanceError",
        "getUserFriendlyErrorMessage",
        "setLoadingState",
        "updateGlobalLoadingIndicator",
        "clearCache",
        "getStats",
        "init",
        "show",
        "getTypeClasses",
        "getIcon"
      ],
      "dependencies": [],
      "dependents": []
    },
    "Code.gs": {
      "type": "gas-backend",
      "size": 62356,
      "functions": [
        "getCurrentSpreadsheet",
        "safeGetUserEmail",
        "isValidEmail",
        "getEmailDomain",
        "isSameDomain",
        "getAdminEmails",
        "isUserAdmin",
        "checkAdmin",
        "publishApp",
        "unpublishApp",
        "parseReactionString",
        "hashTimestamp",
        "getAdminSettings",
        "switchActiveSheet",
        "clearActiveSheet",
        "setShowDetails",
        "setDisplayOptions",
        "validateUserId",
        "getPublishedSheetData",
        "getAvailableSheets",
        "addSpreadsheetUrl",
        "getStatus",
        "getSheets",
        "getSheetHeaders",
        "guessHeadersFromArray",
        "buildBoardData",
        "getSheetDataForSpreadsheet",
        "getAppSettingsForUser",
        "clearHeaderCache",
        "prepareSheetForBoard",
        "findHeaderIndices",
        "saveWebAppUrl",
        "getUrlOrigin",
        "convertPreviewUrl",
        "getWebAppUrl",
        "saveDeployId",
        "createTemplateSheet",
        "checkRateLimit",
        "validateSpreadsheetUrl",
        "createStudyQuestForm",
        "createStudyQuestSpreadsheetFallback",
        "prepareSpreadsheetForStudyQuest",
        "canAccessUserData",
        "filterSensitiveUserData",
        "getUserInfoInternal",
        "getUserInfo",
        "updateUserConfig",
        "sanitizeConfigData",
        "setup",
        "getDatabase",
        "getUserDatabase",
        "extractSpreadsheetId",
        "generateAccessToken",
        "auditLog",
        "findUserByEmailAndSpreadsheet",
        "updateAdminEmails",
        "getActiveUserEmail",
        "getExistingBoard",
        "normalize",
        "find"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "config.gs": {
      "type": "gas-backend",
      "size": 6414,
      "functions": [
        "getConfig",
        "createAutoConfig",
        "saveSheetConfig",
        "createConfigSheet"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "constants.gs": {
      "type": "gas-backend",
      "size": 39635,
      "functions": [
        "getConstant",
        "getErrorSeverity",
        "getErrorCategory",
        "getCacheTTL",
        "getTimeout",
        "getExecutionMaxLifetime",
        "getUserCacheTTL",
        "getDbBatchSize",
        "getDefaultQuestion",
        "getFrontendConstants",
        "createUnifiedResponse",
        "createSuccessResponse",
        "createErrorResponse",
        "handleUnifiedError",
        "logUnified",
        "clearTimeout",
        "setupStep",
        "cleanupExpired",
        "dms",
        "resolveValue",
        "invalidateCacheForSpreadsheet",
        "updateUserDatabaseField",
        "clearUserCache",
        "deleteAll",
        "initializeSystem",
        "initializeComponent",
        "performInitialHealthCheck",
        "performBasicHealthCheck",
        "shutdown",
        "batchGet",
        "fallbackBatchGet",
        "batchUpdate",
        "batchCacheOperation",
        "batchCache",
        "setupStatus",
        "sendSecurityAlert",
        "checkLoginStatus",
        "updateLoginStatus",
        "sheetDataCache",
        "unpublished",
        "unified",
        "safeExecute",
        "checkServiceAccountConfiguration",
        "validateUserScopedKey",
        "performServiceAccountHealthCheck",
        "getTemporaryActiveUserKey",
        "argumentMapper",
        "clearElementCache",
        "resolvePendingClears",
        "rejectPendingClears",
        "alert",
        "confirm",
        "reload",
        "preventDefault",
        "querySelector",
        "validateRequired",
        "validateEmail",
        "validateSpreadsheetId",
        "validateUserId",
        "validateComplex",
        "executeWithTimeout",
        "executeWithRetry",
        "chunkArray",
        "safeFilter",
        "safeMap",
        "processBatch",
        "constructor",
        "append",
        "set",
        "get",
        "has",
        "delete",
        "toString"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "constants.js.html": {
      "type": "html-frontend",
      "size": 6347,
      "functions": [],
      "dependencies": [],
      "dependents": []
    },
    "Core.gs": {
      "type": "gas-backend",
      "size": 166084,
      "functions": [
        "getAutoStopTime",
        "determineSetupStep",
        "validateHeaderIntegrity",
        "getOpinionHeaderSafely",
        "registerNewUser",
        "addReaction",
        "addReactionBatch",
        "getCurrentSheetName",
        "verifyUserAccess",
        "executeGetPublishedSheetData",
        "getIncrementalSheetData",
        "getSheetsList",
        "refreshBoardData",
        "formatSheetDataForFrontend",
        "checkReactionState",
        "getAppConfig",
        "getResponsesData",
        "getCurrentUserStatus",
        "getActiveFormInfo",
        "countSheetRows",
        "getDataCount",
        "updateFormSettings",
        "saveSystemConfig",
        "toggleHighlight",
        "createQuickStartFiles",
        "updateQuickStartDatabase",
        "generateQuickStartResponse",
        "initializeQuickStartContext",
        "quickStartSetup",
        "createUserFolder",
        "processHighlightToggle",
        "getHeaderIndices",
        "getSheetColumns",
        "extractFormIdFromUrl",
        "processReaction",
        "createFormFactory",
        "addUnifiedQuestions",
        "getQuestionConfig",
        "doGetQuestionConfig",
        "saveClassChoices",
        "getSavedClassChoices",
        "createUnifiedForm",
        "createCustomForm",
        "createLinkedSpreadsheet",
        "shareAllSpreadsheetsWithServiceAccount",
        "repairUserSpreadsheetAccess",
        "addReactionColumnsToSpreadsheet",
        "getSheetData",
        "executeGetSheetData",
        "buildRosterMap",
        "processRowData",
        "calculateRowScore",
        "applySortMode",
        "shuffleArray",
        "getHeaderIndex",
        "getColumnHeaderName",
        "mapConfigToActualHeaders",
        "getRowReactions",
        "updateIsActiveStatus",
        "hasSetupPageAccess",
        "getDriveService",
        "shouldEnableDebugMode",
        "isSystemAdmin",
        "deleteUserAccountByAdminForUI",
        "getDeletionLogsForUI",
        "getAllUsersForAdminForUI",
        "createCustomFormUI",
        "createQuickStartFormUI",
        "deleteCurrentUserAccount",
        "activateSheetSimple",
        "getLoginStatus",
        "confirmUserRegistration",
        "getInitialData",
        "fixDataConsistencyManual",
        "getApplicationStatusForUI",
        "setApplicationStatusForUI"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "database.gs": {
      "type": "gas-backend",
      "size": 103568,
      "functions": [
        "logAccountDeletion",
        "deleteUserAccountByAdmin",
        "canDeleteUser",
        "getDeletionLogs",
        "getSheetsService",
        "fixUserDataConsistency",
        "updateUser",
        "createUser",
        "waitForUserRecord",
        "initializeDatabaseSheet",
        "handleMissingUser",
        "createSheetsService",
        "batchGetSheetsData",
        "batchUpdateSheetsData",
        "appendSheetsData",
        "getSpreadsheetsData",
        "updateSheetsData",
        "diagnoseDatabase",
        "checkCacheStatus",
        "verifyServiceAccountPermissions",
        "performAutoRepair",
        "performDataIntegrityCheck",
        "checkForDuplicates",
        "checkMissingRequiredFields",
        "checkInvalidDataFormats",
        "checkOrphanedData",
        "performDataIntegrityFix",
        "getDbSheet",
        "performSystemMonitoring",
        "performHealthCheck",
        "performPerformanceCheck",
        "performSecurityCheck",
        "sendSystemAlert",
        "logSystemEvent",
        "deleteUserAccount",
        "findUserByEmail",
        "findUserById"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "debugConfig.gs": {
      "type": "gas-backend",
      "size": 4803,
      "functions": [
        "isProductionEnvironment",
        "controlledLog",
        "debugLog"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "ErrorBoundary.html": {
      "type": "html-frontend",
      "size": 22189,
      "functions": [
        "forceLogoutAndRedirect",
        "fallbackReload",
        "testServerFunction",
        "categorizeError",
        "handleError",
        "attemptRecovery",
        "handleNetworkError",
        "handleAuthError",
        "handleGoogleScriptError",
        "handleTimeoutError",
        "handleJavaScriptError",
        "handleGenericError",
        "showErrorUI",
        "reportError",
        "getSessionId",
        "wrapWithErrorBoundary",
        "wrapFunctionWithErrorBoundary",
        "setupGlobalErrorHandlers",
        "initErrorBoundary"
      ],
      "dependencies": [],
      "dependents": []
    },
    "errorHandler.gs": {
      "type": "gas-backend",
      "size": 8170,
      "functions": [
        "logError",
        "logSecurityError",
        "logDatabaseError",
        "logValidationError",
        "logPerformanceWarning",
        "getErrorStats",
        "constructor",
        "_buildErrorInfo",
        "_isRetryableError"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "errorMessages.js.html": {
      "type": "html-frontend",
      "size": 11455,
      "functions": [
        "constructor",
        "detectLanguage",
        "getMessage",
        "getSolution",
        "handleError",
        "categorizeError",
        "addToHistory",
        "logError",
        "displayError",
        "formatErrorDisplay",
        "getMessageType",
        "getErrorHistory",
        "clearErrorHistory",
        "setLanguage"
      ],
      "dependencies": [],
      "dependents": []
    },
    "lockManager.gs": {
      "type": "gas-backend",
      "size": 2935,
      "functions": [
        "acquireStandardizedLock",
        "releaseStandardizedLock",
        "executeWithStandardizedLock"
      ],
      "dependencies": [],
      "dependents": []
    },
    "login.js.html": {
      "type": "html-frontend",
      "size": 27505,
      "functions": [
        "updateDomainDisplay",
        "switchAccount",
        "showSecurityModal",
        "closeSecurityModal",
        "showAdminPanelRedirect",
        "handleAdminPanelRedirect",
        "getClientId",
        "registerAndRedirect",
        "processUnifiedLogin",
        "displayCurrentUserEmail",
        "handleSimpleLogin",
        "handleLoginError",
        "init",
        "setTimeout"
      ],
      "dependencies": [],
      "dependents": [
        "LoginPage.html"
      ]
    },
    "LoginPage.html": {
      "type": "html-frontend",
      "size": 11856,
      "functions": [],
      "dependencies": [
        "SharedSecurityHeaders.html",
        "SharedTailwindConfig.html",
        "UnifiedStyles.html",
        "SharedUtilities.html",
        "login.js.html"
      ],
      "dependents": []
    },
    "main.gs": {
      "type": "gas-backend",
      "size": 53626,
      "functions": [
        "include",
        "checkApplicationAccess",
        "getCurrentUserEmail",
        "getCurrentUserInfo",
        "escapeJavaScript",
        "isTrue",
        "htmlEncode",
        "safeSetXFrameOptionsDeny",
        "log",
        "getDeployUserDomainInfo",
        "isSystemSetup",
        "getGoogleClientId",
        "checkSystemConfiguration",
        "getSystemDomainInfo",
        "doGet",
        "handleAdminRoute",
        "showLoginPage",
        "showSetupPage",
        "showAppSetupPage",
        "getLastAdminUserId",
        "getAppSetupUrl",
        "showErrorPage",
        "showAccessRestrictedPage",
        "buildUserAdminUrl",
        "redirectToUrl",
        "createSecureRedirect",
        "sanitizeRedirectUrl",
        "parseRequestParams",
        "renderAdminPanel",
        "renderAnswerBoard",
        "checkCurrentPublicationStatus",
        "checkIsSystemAdmin",
        "getSpreadsheetList",
        "getSheetList",
        "getCurrentConfig",
        "connectToDataSource",
        "saveDraftConfiguration",
        "publishApplication"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "monitoring.gs": {
      "type": "gas-backend",
      "size": 12039,
      "functions": [
        "performSystemDiagnostics",
        "initializeHealthChecks",
        "getMonitoringDashboard",
        "getRecentErrors",
        "runScheduledHealthCheck",
        "constructor",
        "log",
        "_persistLog",
        "startTimer",
        "debug",
        "info",
        "warn",
        "error",
        "fatal",
        "registerCheck",
        "_generateSummary"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "page.css.html": {
      "type": "html-frontend",
      "size": 15658,
      "functions": [],
      "dependencies": [],
      "dependents": []
    },
    "Page.html": {
      "type": "html-frontend",
      "size": 118610,
      "functions": [
        "processBatch",
        "measurePerformance",
        "constructor",
        "set",
        "get",
        "has",
        "delete",
        "clear",
        "cleanup",
        "init",
        "setupOwnerName",
        "setupCriticalElements",
        "setupNonCriticalEventListeners",
        "setupEventDelegation",
        "adjustLayout",
        "runGas",
        "showAdminControls",
        "showNewContentBanner",
        "dismissNewContentBanner",
        "getMockData",
        "startPolling",
        "stopPolling",
        "destroy",
        "showMinimalSkeleton",
        "populateSheetSelector",
        "updateSheetSelectorLabels",
        "populateClassFilter",
        "applyReactionStyles",
        "renderBoard",
        "renderWithVirtualScrolling",
        "updateExistingCard",
        "createAnswerCard",
        "createSkeletonCard",
        "showErrorFeedback",
        "endAdminMode",
        "updateReactionButtonUI",
        "applyUpdates",
        "showAnswerModal",
        "updateModalContent",
        "hideAnswerModal",
        "showInfoModal",
        "hideInfoModal",
        "getIcon",
        "renderIcons",
        "debounce",
        "throttle",
        "updateSortOptions",
        "updateConfigFromGlobals",
        "escapeHtml",
        "detectLowPerformanceDevice",
        "setupPerformanceMonitoring",
        "optimizeForLowPerformance",
        "setupObservers",
        "deferredRender",
        "batchDOMUpdates",
        "getReusableFragment",
        "recycleFragment",
        "throttledUpdate"
      ],
      "dependencies": [],
      "dependents": []
    },
    "page.js.html": {
      "type": "html-frontend",
      "size": 334374,
      "functions": [
        "getDynamicBatchSize",
        "loadDomainInfo",
        "displayDomainInfo",
        "loadFormLink",
        "executeUpdate",
        "listener",
        "getReactionButtonState",
        "hasStateChanged",
        "poll",
        "cleanup",
        "handleKeydown",
        "measurePerformance",
        "processBatch",
        "constructor",
        "set",
        "get",
        "has",
        "delete",
        "clear",
        "validateUserId",
        "resetStateForCleanInit",
        "synchronizeStateAfterDataUpdate",
        "logDataConsistencyMetrics",
        "logCacheActivity",
        "logErrorDetails",
        "initPublicationStatusMonitoring",
        "determineRecoveryStrategy",
        "displayUserFriendlyError",
        "setupCriticalElements",
        "setupNonCriticalEventListeners",
        "setupEventDelegation",
        "adjustLayout",
        "runGas",
        "updateAdminButtonUI",
        "updateEndPublicationButtonUI",
        "validateContentCheckPrerequisites",
        "prepareContentCheckParams",
        "shouldAutoRefresh",
        "showNewContentBanner",
        "dismissNewContentBanner",
        "startNewAnswerPolling",
        "stopNewAnswerPolling",
        "provideFeedback",
        "getMockData",
        "startPolling",
        "stopPolling",
        "performMemoryCleanup",
        "cleanupDOMReferences",
        "cleanupEventListeners",
        "optimizeVirtualScrollState",
        "checkLongRunningPerformance",
        "showWarningMessage",
        "destroy",
        "validatePrerequisites",
        "displayInitializationError",
        "displayDataLoadError",
        "showErrorMessage",
        "showMinimalSkeleton",
        "displayEmptyState",
        "removeEmptyState",
        "safeDisplayEmptyState",
        "validateConfigConsistency",
        "classifyInconsistency",
        "hasRelevantLocalStorage",
        "isValidDataResult",
        "getValidationFailureReason",
        "displayUserNotFoundError",
        "showLoadingOverlay",
        "hideLoadingOverlay",
        "shouldClearCache",
        "clearAllCachesForUnpublished",
        "populateSheetSelector",
        "updateSheetDisplayName",
        "clearVirtualScrollingState",
        "updateSheetSelectorLabels",
        "populateClassFilter",
        "applyReactionStyles",
        "initializeAdminSettings",
        "prepareRenderingState",
        "updateLayoutControls",
        "performMainRendering",
        "renderDirectly",
        "calculateVisibleRange",
        "renderWithVirtualScrolling",
        "shouldUpdateCard",
        "finalizeRenderingState",
        "updateAnswerCount",
        "applyAnimations",
        "handleRenderingError",
        "updateAnswerCard",
        "updateCardReactions",
        "batchUpdateReactionButtons",
        "updateCardReactionBackground",
        "updateCardHighlight",
        "updateExistingCard",
        "createAnswerCard",
        "createSkeletonCard",
        "notifyReactionComplete",
        "waitForReactionComplete",
        "addToBatchQueue",
        "processBatchReactionResponse",
        "setReactionButtonsLoading",
        "validateReactionConsistency",
        "recordReactionInconsistency",
        "applyFallbackReactionUpdate",
        "getScopedKey",
        "loadLastSeenCount",
        "isFirstTimeBoardAccess",
        "saveLastSeenCount",
        "updateLastSeenCount",
        "loadDifferentialCards",
        "saveDifferentialCards",
        "clearDifferentialCards",
        "restoreDifferentialCards",
        "showErrorFeedback",
        "startSyncMonitoring",
        "stopSyncMonitoring",
        "calculateStateHash",
        "validateBatchSystem",
        "testNotificationBannerElements",
        "testNotificationLogic",
        "validateNotificationSystem",
        "redirectToUnpublishedPage",
        "endAdminMode",
        "saveReactionState",
        "loadReactionState",
        "applyReactionState",
        "updateModalReactionButtons",
        "applyUpdates",
        "showAnswerModal",
        "updateModalContent",
        "hideAnswerModal",
        "showInfoModal",
        "hideInfoModal",
        "getIcon",
        "renderIcons",
        "debounce",
        "throttle",
        "updateSortOptions",
        "updateConfigFromGlobals",
        "escapeHtml",
        "detectLowPerformanceDevice",
        "setupPerformanceMonitoring",
        "optimizeForLowPerformance",
        "setupObservers",
        "deferredRender",
        "batchDOMUpdates",
        "getReusableFragment",
        "recycleFragment",
        "throttledUpdate",
        "setupScrollObserver",
        "handleVirtualScroll",
        "loadMoreItems",
        "renderAdditionalItems",
        "validateVirtualScrollState",
        "optimizeVisibleElements",
        "hideCard",
        "restoreCard",
        "resetVirtualScrollState",
        "validateReasonText"
      ],
      "dependencies": [],
      "dependents": [
        "SetupPage.html"
      ],
      "usesGasApi": true
    },
    "Registration.html": {
      "type": "html-frontend",
      "size": 41839,
      "functions": [
        "scrollToRegistration",
        "updateStep",
        "showExistingBoard",
        "showMessage",
        "copyToClipboard"
      ],
      "dependencies": [],
      "dependents": []
    },
    "resilientExecutor.gs": {
      "type": "gas-backend",
      "size": 11570,
      "functions": [
        "resilientUrlFetch",
        "resilientSpreadsheetOperation",
        "resilientCacheOperation",
        "constructor",
        "calculateBackoffDelay",
        "isRetryableError",
        "handleSuccess",
        "handleFailure",
        "sleep",
        "getStats",
        "resetStats"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "secretManager.gs": {
      "type": "gas-backend",
      "size": 22690,
      "functions": [
        "getSecureProperty",
        "setSecureProperty",
        "constructor",
        "getSecret",
        "setSecret",
        "getSecretFromManager",
        "setSecretInManager",
        "getSecretFromProperties",
        "setSecretInProperties",
        "encryptValue",
        "decryptValue",
        "isEncryptedValue",
        "isCriticalSecret",
        "validateCriticalSecret",
        "getProjectIdFromEnvironment",
        "isSecretCached",
        "getSecretFromCache",
        "isCacheExpired",
        "cacheSecret",
        "clearSecretCache",
        "logSecretAccess",
        "getAuditLog",
        "performHealthCheck"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "session-utils.gs": {
      "type": "gas-backend",
      "size": 13106,
      "functions": [
        "cleanupSessionOnAccountSwitch",
        "resetUserAuthentication",
        "forceLogoutAndRedirectToLogin",
        "detectAccountSwitch",
        "escapeJavaScript"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "setup.gs": {
      "type": "gas-backend",
      "size": 3529,
      "functions": [
        "setupApplication",
        "testSetup"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "SetupPage.html": {
      "type": "html-frontend",
      "size": 15266,
      "functions": [
        "showMessage",
        "validateJSON",
        "validateSpreadsheetId",
        "startApp"
      ],
      "dependencies": [
        "SharedSecurityHeaders.html",
        "SharedTailwindConfig.html",
        "UnifiedStyles.html",
        "SharedUtilities.html",
        "page.js.html"
      ],
      "dependents": []
    },
    "SharedModals.html": {
      "type": "html-frontend",
      "size": 76666,
      "functions": [
        "updateRemainingTime",
        "toggleChoicesVisibility",
        "constructor",
        "loadModals",
        "loadAdminModals",
        "showConfirmation",
        "showAlert",
        "showLoading",
        "hideModal",
        "setupEventListeners",
        "showPrivacy",
        "showDigitalCitizenship",
        "showAutoStopConfirmation",
        "validatePublishResult",
        "updateUrlStatusDisplay",
        "displayUrlStatus",
        "startCountdown",
        "showFormConfig",
        "showSecurityDetails",
        "showGoogleIntegration",
        "showPrivacyWarning",
        "showPublish",
        "showQuickStartStopConfirmation",
        "showCustomSetupSelection"
      ],
      "dependencies": [],
      "dependents": []
    },
    "SharedSecurityHeaders.html": {
      "type": "html-frontend",
      "size": 650,
      "functions": [],
      "dependencies": [],
      "dependents": [
        "AccessRestricted.html",
        "AdminPanel.html",
        "AppSetupPage.html",
        "LoginPage.html",
        "SetupPage.html"
      ]
    },
    "SharedTailwindConfig.html": {
      "type": "html-frontend",
      "size": 1813,
      "functions": [],
      "dependencies": [],
      "dependents": [
        "AccessRestricted.html",
        "AdminPanel.html",
        "AppSetupPage.html",
        "LoginPage.html",
        "SetupPage.html"
      ]
    },
    "SharedUtilities.html": {
      "type": "html-frontend",
      "size": 44510,
      "functions": [
        "testDebounce",
        "constructor",
        "debounce",
        "clear",
        "clearAll",
        "throttle",
        "createSafeElement",
        "getCachedElement",
        "cacheElements",
        "clearElementCache",
        "setButtonState",
        "setSafeTextContent",
        "toggleClass",
        "addSafeEventListener",
        "removeSafeEventListener",
        "set",
        "get",
        "has",
        "delete",
        "removeOldest",
        "cleanup",
        "getStats",
        "logError",
        "getRecentErrors",
        "clearErrors",
        "setupGlobalErrorHandling",
        "setLoading",
        "isLoading",
        "getLoadingMessage",
        "clearLoading",
        "clearAllLoading",
        "callWithCache",
        "call",
        "callWithLoading",
        "isGASEnvironment",
        "escapeHtml",
        "sanitizeHtml",
        "isValidEmail",
        "init",
        "setupDOMObserver",
        "createFallbackOverlay",
        "show",
        "hide",
        "updateContent",
        "showSimple",
        "showProgress",
        "showTransparent",
        "showQuickStart",
        "showAdminProgress",
        "showMessage",
        "removeNotification",
        "success",
        "error",
        "warning",
        "info"
      ],
      "dependencies": [],
      "dependents": [
        "AccessRestricted.html",
        "AdminPanel.html",
        "AppSetupPage.html",
        "LoginPage.html",
        "SetupPage.html"
      ],
      "usesGasApi": true
    },
    "ulog.gs": {
      "type": "gas-backend",
      "size": 6864,
      "functions": [
        "ulogFunction"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "UnifiedCache.js.html": {
      "type": "html-frontend",
      "size": 942,
      "functions": [
        "constructor",
        "set",
        "get",
        "delete",
        "clear",
        "getOrSet"
      ],
      "dependencies": [],
      "dependents": []
    },
    "unifiedCacheManager.gs": {
      "type": "gas-backend",
      "size": 78966,
      "functions": [
        "getCachedSpreadsheet",
        "cleanupOldCacheEntries",
        "invalidateSpreadsheetCache",
        "clearAllSpreadsheetCache",
        "getSpreadsheetCacheStats",
        "openSpreadsheetOptimized",
        "getUnifiedExecutionCache",
        "resetUnifiedExecutionCache",
        "getHeadersCached",
        "getHeadersWithRetry",
        "validateRequiredHeaders",
        "preWarmCache",
        "analyzeCacheEfficiency",
        "clearExecutionUserInfoCache",
        "clearAllExecutionCache",
        "getSheetsServiceCached",
        "getCachedSheetsService",
        "synchronizeCacheAfterCriticalUpdate",
        "clearDatabaseCache",
        "clearExecutionSheetsServiceCache",
        "constructor",
        "get",
        "validateKey",
        "getFromCacheHierarchy",
        "parseScriptCacheValue",
        "handleCorruptedCacheEntry",
        "remove",
        "invalidateSheetData",
        "clearByPattern",
        "_isProtectedKey",
        "invalidateRelated",
        "_getInvalidationPatterns",
        "_invalidateCrossEntityCache",
        "clearExpired",
        "clearAll",
        "getHealth",
        "resetStats",
        "parsePropertiesValue",
        "setToCacheHierarchy",
        "getConfig",
        "getUserInfo",
        "setUserInfo",
        "getSheetsService",
        "setSheetsService",
        "clearUserInfo",
        "clearSheetsService",
        "isExpired",
        "getStats",
        "syncWithUnifiedCache",
        "clearUserInfoCache",
        "invalidateUserCache"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "unifiedSecurityManager.gs": {
      "type": "gas-backend",
      "size": 42090,
      "functions": [
        "getServiceAccountTokenCached",
        "generateNewServiceAccountToken",
        "clearServiceAccountTokenCache",
        "getServiceAccountEmail",
        "verifyAdminAccess",
        "updateUserLastAccess",
        "getSetupStatusFromConfig",
        "secureMultiTenantCacheOperation",
        "performMultiTenantHealthCheck",
        "performComprehensiveSecurityHealthCheck",
        "checkAuthenticationHealth",
        "checkDatabaseHealth",
        "getSecurityMetrics",
        "scheduleSecurityHealthCheck",
        "runScheduledSecurityHealthCheck",
        "addServiceAccountToSpreadsheet",
        "shareSpreadsheetWithServiceAccount",
        "buildUserScopedKey",
        "isDeployUser",
        "getSecureServiceAccountCreds",
        "getSecureDatabaseId",
        "constructor",
        "validateTenantBoundary",
        "validateDataAccessPattern",
        "generateSecureKey",
        "generateUserHash",
        "checkAdminAccess",
        "logSecurityViolation",
        "logDataAccess",
        "handleCriticalSecurityViolation",
        "getSecurityStats"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "UnifiedStyles.html": {
      "type": "html-frontend",
      "size": 25182,
      "functions": [],
      "dependencies": [],
      "dependents": [
        "AccessRestricted.html",
        "AdminPanel.html",
        "AppSetupPage.html",
        "LoginPage.html",
        "SetupPage.html"
      ]
    },
    "unifiedUtilities.gs": {
      "type": "gas-backend",
      "size": 9993,
      "functions": [],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    },
    "Unpublished.html": {
      "type": "html-frontend",
      "size": 11340,
      "functions": [
        "copyBoardUrl",
        "showMessage"
      ],
      "dependencies": [],
      "dependents": []
    },
    "url.gs": {
      "type": "gas-backend",
      "size": 15578,
      "functions": [
        "normalizeUrlString",
        "computeWebAppUrl",
        "getWebAppUrlCached",
        "getFallbackUrl",
        "clearUrlCache",
        "getWebAppBaseUrl",
        "forceUrlSystemReset",
        "generateUserUrls",
        "addCacheBustingParams",
        "generateUnpublishedStateUrl",
        "generateUserUrlsWithCacheBusting"
      ],
      "dependencies": [],
      "dependents": [],
      "usesGasApi": true
    }
  },
  "entryPoints": [
    "doGet",
    "doPost",
    "include",
    "onOpen",
    "onEdit",
    "onFormSubmit",
    "installTrigger",
    "uninstallTrigger",
    "onInstall",
    "runScheduledSecurityHealthCheck"
  ],
  "riskAssessment": {
    "files": {
      "low": 0,
      "medium": 29,
      "high": 0
    },
    "functions": {
      "low": 23,
      "medium": 7,
      "high": 0
    }
  },
  "cleanupPlan": {
    "phase1": "低リスクファイル・関数の削除",
    "phase2": "テスト実行と動作確認",
    "phase3": "中リスク項目の慎重な検討",
    "phase4": "高リスク項目の手動検証",
    "rollbackPlan": "バックアップからの復旧手順を準備"
  }
}